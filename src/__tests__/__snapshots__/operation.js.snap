// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`metricsOperation and toMiddleware enhance and convert each method correctly 1`] = `
Array [
  Array [
    "operation.methodA.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodA.segment.undefined.state.success",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction failure 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction failure 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction failure 3`] = `
Array [
  Array [
    Object {
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction failure 4`] = `Array []`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction success 1`] = `
Array [
  Array [
    "operation.methodA.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodA.segment.undefined.state.success",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction success 2`] = `
Array [
  Array [
    Object {
      "operation": "methodA",
    },
  ],
  Array [
    Object {
      "operation": "methodA",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "methodB",
    },
  ],
  Array [
    Object {
      "operation": "methodB",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction success 3`] = `Array []`;

exports[`metricsOperation and toMiddleware used after logOperation log and record metrics correctly when callFunction success 4`] = `Array []`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 1`] = `
Object {
  "operation": "operationFunctionA",
}
`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 2`] = `
Object {
  "operation": "operationFunctionB",
}
`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 3`] = `
Array [
  Array [
    "operation.operationFunctionA.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunctionA.segment.undefined.state.success",
    1,
  ],
  Array [
    "operation.operationFunctionB.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunctionB.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 4`] = `
Array [
  Array [
    Object {
      "operation": "operationFunctionA",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionA",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionB",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionB",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 5`] = `Array []`;

exports[`metricsOperation and toMiddleware used after logOperation set anonymous function names as per property name correctly 6`] = `Array []`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction failure 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction failure 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction failure 3`] = `
Array [
  Array [
    Object {
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction failure 4`] = `Array []`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction success 1`] = `
Array [
  Array [
    "operation.methodA.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodA.segment.undefined.state.success",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.methodB.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction success 2`] = `
Array [
  Array [
    Object {
      "operation": "methodA",
    },
  ],
  Array [
    Object {
      "operation": "methodA",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "methodB",
    },
  ],
  Array [
    Object {
      "operation": "methodB",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction success 3`] = `Array []`;

exports[`metricsOperation and toMiddleware used before logOperation log and record metrics correctly when callFunction success 4`] = `Array []`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 1`] = `
Object {
  "operation": "operationFunctionA",
}
`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 2`] = `
Object {
  "operation": "operationFunctionB",
}
`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 3`] = `
Array [
  Array [
    "operation.operationFunctionA.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunctionA.segment.undefined.state.success",
    1,
  ],
  Array [
    "operation.operationFunctionB.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operationFunctionB.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 4`] = `
Array [
  Array [
    Object {
      "operation": "operationFunctionA",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionA",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionB",
    },
  ],
  Array [
    Object {
      "operation": "operationFunctionB",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 5`] = `Array []`;

exports[`metricsOperation and toMiddleware used before logOperation set anonymous function names as per property name correctly 6`] = `Array []`;

exports[`metricsOperation record metrics correctly operation failure of async function 1`] = `
Array [
  Array [
    "operation.operation.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operation.segment.undefined.state.failure.category.CUSTOM_ERROR.type.MOCK_ERROR_TYPE",
    1,
  ],
]
`;

exports[`metricsOperation record metrics correctly operation failure of non-async function 1`] = `
Array [
  Array [
    "operation.operation.segment.undefined.state.start",
    1,
  ],
  Array [
    "operation.operation.segment.undefined.state.failure.category.CUSTOM_ERROR.type.MOCK_ERROR_TYPE",
    1,
  ],
]
`;

exports[`metricsOperation record metrics correctly operation success of async function with autoMetricsAction sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation record metrics correctly operation success of non-async function with autoMetricsAction sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation record metrics correctly operation success of req.meta.segment from previous middlewares if not set req.metrics 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.MOCK_USER_TYPE.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.segment.MOCK_USER_TYPE.state.success",
    1,
  ],
]
`;

exports[`metricsOperation record metrics correctly operation success of req.metrics.segment from previous middlewares 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.MOCK_USER_TYPE.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.segment.MOCK_USER_TYPE.state.success",
    1,
  ],
]
`;

exports[`metricsOperation throw Error if metrics instance was not set 1`] = `[Error: auto metrics instance needs to be initialised]`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.status.404",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.status.404",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
]
`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
    },
  ],
]
`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 3`] = `
Array [
  Array [
    Object {
      "action": "callFunction",
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
  Array [
    Object {
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
]
`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 4`] = `Array []`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation success with enhanced sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation success with enhanced sub action 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "operationFunction",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation success with enhanced sub action 3`] = `Array []`;

exports[`metricsOperation used after logOperation from n-auto-logger record correctly in operation success with enhanced sub action 4`] = `Array []`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.status.404",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.status.404",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.failure.category.FETCH_RESPONSE_ERROR.type.SESSION_NOT_FOUND",
    1,
  ],
]
`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
    },
  ],
]
`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 3`] = `
Array [
  Array [
    Object {
      "action": "callFunction",
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
  Array [
    Object {
      "category": "FETCH_RESPONSE_ERROR",
      "message": "bar",
      "operation": "operationFunction",
      "result": "failure",
      "status": 404,
      "type": "SESSION_NOT_FOUND",
    },
  ],
]
`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation failure with enhanced sub action 4`] = `Array []`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation success with enhanced sub action 1`] = `
Array [
  Array [
    "operation.operationFunction.segment.undefined.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.start",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.start",
    1,
  ],
  Array [
    "service.undefined.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.action.callFunction.state.success",
    1,
  ],
  Array [
    "operation.operationFunction.segment.undefined.state.success",
    1,
  ],
]
`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation success with enhanced sub action 2`] = `
Array [
  Array [
    Object {
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
    },
  ],
  Array [
    Object {
      "action": "callFunction",
      "operation": "operationFunction",
      "result": "success",
    },
  ],
  Array [
    Object {
      "operation": "operationFunction",
      "result": "success",
    },
  ],
]
`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation success with enhanced sub action 3`] = `Array []`;

exports[`metricsOperation used before logOperation from n-auto-logger record correctly in operation success with enhanced sub action 4`] = `Array []`;
